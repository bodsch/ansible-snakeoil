---

- name: create temporary path
  file:
    path: "{{ tmp_path }}"
    state: directory
  delegate_to: localhost

- name: create openssl config
  template:
    src: csr.j2
    dest: "{{ local_tmp_directory }}/snakeoil/csr.txt"
  delegate_to: localhost

- name: create csr
  shell: |
    openssl req -new -sha512 -nodes -out cm.local.csr -newkey rsa:4096 -keyout cm.local.key -config csr.txt
  args:
    chdir: "{{ local_tmp_directory }}/snakeoil"
  delegate_to: localhost

- name: create dh.pem
  shell: |
    openssl dhparam -out dh.pem 2048
  args:
    chdir: "{{ local_tmp_directory }}/snakeoil"
  delegate_to: localhost

- name: create certificate
  shell: |
    openssl x509 -in cm.local.csr -out cm.local.pem -req -signkey cm.local.key -days 29
    cat cm.local.key >> cm.local.pem
  args:
    chdir: "{{ local_tmp_directory }}/snakeoil"
  delegate_to: localhost

- name: compress directory {{ local_tmp_directory }}/snakeoil
  archive:
    path: "{{ local_tmp_directory }}/snakeoil"
    dest: "{{ local_tmp_directory }}/snakeoil.tgz"
    remove: true
  delegate_to: localhost

- name: "remove old temporary path '{{ tmp_path }}'"
  file:
    path: "{{ tmp_path }}"
    state: absent
  delegate_to: localhost

- name: propagate snakeoil.tgz
  become: true
  copy:
    src: "{{ local_tmp_directory }}/snakeoil.tgz"
    dest: "{{ deployment_tmp_directory }}/"
  tags:
    - snakeoil

- block:

    - name: create {{ snakeoil_extract_to }}
      file:
        path: "{{ snakeoil_extract_to }}"
        state: directory

    - name: extract snakeoil
      unarchive:
        src: "{{ deployment_tmp_directory }}/snakeoil.tgz"
        dest: "{{ snakeoil_extract_to }}"
        remote_src: true
  tags:
    - snakeoil
  when: snakeoil_extract_to is defined and snakeoil_extract_to != ''
